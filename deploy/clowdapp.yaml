---
apiVersion: v1
kind: Template
metadata:
  name: ccx-notification-service
objects:

- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: ccx-notification-service
  spec:
    envName: ${ENV_NAME}
    testing:
      iqePlugin: ccx
    jobs:
      - name: ccx-notification-service
        schedule: ${JOB_SCHEDULE}
        restartPolicy: Never
        concurrencyPolicy: Forbid
        # In PROD 1 cronjob takes around 45 min. Deadline set to 60 mins.
        activeDeadlineSeconds: 3600
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          env:
          - name: CCX_NOTIFICATION_SERVICE__KAFKA_BROKER__ADDRESS
            value: ${KAFKA_BOOTSTRAP_HOST}:${KAFKA_BOOTSTRAP_PORT}
          - name: CCX_NOTIFICATION_SERVICE__KAFKA_BROKER__TOPIC
            value: ${OUTGOING_TOPIC}
          - name: CCX_NOTIFICATION_SERVICE__KAFKA_BROKER__TIMEOUT
            value: 60s
          - name: CCX_NOTIFICATION_SERVICE__STORAGE__DB_DRIVER
            value: postgres
          - name: CCX_NOTIFICATION_SERVICE__STORAGE__PG_USERNAME
            valueFrom:
              secretKeyRef:
                key: db.user
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_SERVICE__STORAGE__PG_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db.password
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_SERVICE__STORAGE__PG_HOST
            valueFrom:
              secretKeyRef:
                key: db.host
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_SERVICE__STORAGE__PG_PORT
            valueFrom:
              secretKeyRef:
                key: db.port
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_SERVICE__STORAGE__PG_DB_NAME
            valueFrom:
              secretKeyRef:
                key: db.name
                name: ${DATABASE_SERVICE_NAME}
          - name: CCX_NOTIFICATION_SERVICE__STORAGE__PG_PARAMS
            value: sslmode=disable
          - name: CCX_NOTIFICATION_SERVICE__STORAGE__LOG_SQL_QUERIES
            value: 'true'
          - name: CCX_NOTIFICATION_SERVICE__LOGGING__DEBUG
            value: 'true'
          - name: CCX_NOTIFICATION_SERVICE__LOGGING__LEVEL
            value: info
          - name: CCX_NOTIFICATION_SERVICE__DEPENDENCIES__CONTENT_SERVER
            value: http://ccx-insights-content-service:${CONTENT_SERVICE_PORT}/api/v1/
          - name: CCX_NOTIFICATION_SERVICE__DEPENDENCIES__CONTENT_ENDPOINT
            value: content
          - name: CCX_NOTIFICATION_SERVICE__NOTIFICATIONS__INSIGHTS_ADVISOR_URL
            value: "https://${PLATFORM_HOSTNAME}/openshift/insights/advisor/clusters/{cluster_id}"
          - name: CCX_NOTIFICATION_SERVICE__NOTIFICATIONS__CLUSTER_DETAILS_URI
            value: "https://${PLATFORM_HOSTNAME}/openshift/insights/advisor/clusters/{cluster_id}"
          - name: CCX_NOTIFICATION_SERVICE__NOTIFICATIONS__RULE_DETAILS_URI
            value: "https://${PLATFORM_HOSTNAME}/openshift/insights/advisor/clusters/{cluster_id}?first={module}|{error_key}"
          - name: CCX_NOTIFICATION_SERVICE__NOTIFICATIONS__COOLDOWN
            value: ${NOTIFICATION_RESEND_COOLDOWN}
          - name: CCX_NOTIFICATION_SERVICE__METRICS__JOB_NAME
            value: ccx_notification_service
          - name: CCX_NOTIFICATION_SERVICE__METRICS__NAMESPACE
            value: ${METRICS_NAMESPACE}
          - name: CCX_NOTIFICATION_SERVICE__METRICS__GATEWAY_URL
            valueFrom:
              secretKeyRef:
                key: server
                name: push-gateway-basic-auth
          - name: CCX_NOTIFICATION_SERVICE__METRICS__GATEWAY_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: credentials_b64
                name: push-gateway-basic-auth
          - name: CCX_NOTIFICATION_SERVICE__METRICS__RETRIES
            value: ${METRICS_PUSH_RETRIES}
          - name: CCX_NOTIFICATION_SERVICE__METRICS__RETRY_AFTER
            value: ${METRIS_PUSH_RETRIES_COOLDOWN}
          command:
            - /bin/sh
            - -c
            - ./ccx-notification-service --instant-reports --cleanup-on-startup --max-age '8 days'
    database:
      sharedDbAppName: ccx-notification-writer


parameters:
- description: Image name
  name: IMAGE
  value: quay.io/cloudservices/ccx-notification-service
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: 'true'
- description: ClowdEnv Name
  name: ENV_NAME
  required: true
- name: KAFKA_BOOTSTRAP_HOST
  required: true
  value: mq-kafka
- name: KAFKA_BOOTSTRAP_PORT
  required: true
  value: '29092'
- name: OUTGOING_TOPIC
  required: true
  value: platform.notifications.ingress
- description: Should the cron job be disabled?
  name: SUSPEND_JOB
  value: 'false'
- description: When the cronjob runs
  name: JOB_SCHEDULE
  value: '*/3 * * * *'
- name: CPU_LIMIT
  value: 500m
- description: memory limit of service
  name: MEMORY_LIMIT
  value: 512Mi
- name: CPU_REQUEST
  value: 100m
- description: memory request of service
  name: MEMORY_REQUEST
  value: 256Mi
- name: DATABASE_SERVICE_NAME
  required: true
  value: ccx-notification-db
- name: PLATFORM_HOSTNAME
- name: CONTENT_SERVICE_PORT
- name: NOTIFICATION_RESEND_COOLDOWN
  value: 24h
- name: METRICS_NAMESPACE
  value: ccx_notification_service
- name: METRICS_PUSH_RETRIES
  value: '3'
- name: METRIS_PUSH_RETRIES_COOLDOWN
  value: 60s
